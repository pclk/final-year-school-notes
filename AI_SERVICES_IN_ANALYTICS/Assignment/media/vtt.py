import json
from datetime import datetime


def seconds_to_timestamp(seconds):
    hours = int(seconds // 3600)
    minutes = int((seconds % 3600) // 60)
    seconds = seconds % 60
    milliseconds = int((seconds % 1) * 1000)
    seconds = int(seconds)
    return f"{hours:02d}:{minutes:02d}:{seconds:02d},{milliseconds:03d}"


def json_to_srt(json_data):
    srt_content = ""

    # Convert each entry to SRT format
    for index, item in enumerate(json_data, 1):
        start_time = seconds_to_timestamp(item["start"])
        end_time = seconds_to_timestamp(item["end"])

        # Add subtitle number, timestamp and text
        srt_content += f"{index}\n"
        srt_content += f"{start_time} --> {end_time}\n"
        srt_content += f"{item['text'].strip()}\n\n"

    return srt_content


# Example usage:
json_data = [
    {
        "id": 0,
        "seek": 0,
        "start": 0,
        "end": 5,
        "text": " I'm Wei-Hang and I'm sharing about my object detection project regarding workplace safety.",
        "tokens": [
            50365,
            286,
            478,
            21174,
            12,
            39,
            656,
            293,
            286,
            478,
            5414,
            466,
            452,
            2657,
            17784,
            1716,
            8595,
            15328,
            4514,
            13,
            50615,
        ],
        "temperature": 0,
        "avg_logprob": -0.20312335,
        "compression_ratio": 1.6390041,
        "no_speech_prob": 3.9235776e-12,
    },
    {
        "id": 1,
        "seek": 0,
        "start": 5,
        "end": 11,
        "text": " Workplace safety is important because it protects employees, increases productivity and reduces costs.",
        "tokens": [
            50615,
            6603,
            6742,
            4514,
            307,
            1021,
            570,
            309,
            22583,
            6619,
            11,
            8637,
            15604,
            293,
            18081,
            5497,
            13,
            50915,
        ],
        "temperature": 0,
        "avg_logprob": -0.20312335,
        "compression_ratio": 1.6390041,
        "no_speech_prob": 3.9235776e-12,
    },
    {
        "id": 2,
        "seek": 0,
        "start": 11,
        "end": 20,
        "text": " And this creates three key use cases for object detection, which are monitoring usage, checking for safety practices and preventive maintenance.",
        "tokens": [
            50915,
            400,
            341,
            7829,
            1045,
            2141,
            764,
            3331,
            337,
            2657,
            17784,
            11,
            597,
            366,
            11028,
            14924,
            11,
            8568,
            337,
            4514,
            7525,
            293,
            4871,
            488,
            11258,
            13,
            51365,
        ],
        "temperature": 0,
        "avg_logprob": -0.20312335,
        "compression_ratio": 1.6390041,
        "no_speech_prob": 3.9235776e-12,
    },
    {
        "id": 3,
        "seek": 0,
        "start": 20,
        "end": 24,
        "text": " Firstly, we can monitor usage patterns. How you make us?",
        "tokens": [
            51365,
            20042,
            11,
            321,
            393,
            6002,
            14924,
            8294,
            13,
            1012,
            291,
            652,
            505,
            30,
            51565,
        ],
        "temperature": 0,
        "avg_logprob": -0.20312335,
        "compression_ratio": 1.6390041,
        "no_speech_prob": 3.9235776e-12,
    },
    {
        "id": 4,
        "seek": 2400,
        "start": 24,
        "end": 29,
        "text": " Let's say we have multiple CCTVs in multiple locations that make predictions of their own",
        "tokens": [
            50365,
            961,
            311,
            584,
            321,
            362,
            3866,
            44838,
            82,
            294,
            3866,
            9253,
            300,
            652,
            21264,
            295,
            641,
            1065,
            50615,
        ],
        "temperature": 0,
        "avg_logprob": -0.18627313,
        "compression_ratio": 1.7397261,
        "no_speech_prob": 5.1377977e-12,
    },
    {
        "id": 5,
        "seek": 2400,
        "start": 29,
        "end": 30,
        "text": " at regular intervals.",
        "tokens": [50615, 412, 3890, 26651, 13, 50665],
        "temperature": 0,
        "avg_logprob": -0.18627313,
        "compression_ratio": 1.7397261,
        "no_speech_prob": 5.1377977e-12,
    },
    {
        "id": 6,
        "seek": 2400,
        "start": 30,
        "end": 35.16,
        "text": " When the bounding box of the person and ladder overlap and the person is higher than the",
        "tokens": [
            50665,
            1133,
            264,
            5472,
            278,
            2424,
            295,
            264,
            954,
            293,
            18325,
            19959,
            293,
            264,
            954,
            307,
            2946,
            813,
            264,
            50923,
        ],
        "temperature": 0,
        "avg_logprob": -0.18627313,
        "compression_ratio": 1.7397261,
        "no_speech_prob": 5.1377977e-12,
    },
    {
        "id": 7,
        "seek": 2400,
        "start": 35.16,
        "end": 38,
        "text": " ladder, we can consider that as ladder activity.",
        "tokens": [50923, 18325, 11, 321, 393, 1949, 300, 382, 18325, 5191, 13, 51065],
        "temperature": 0,
        "avg_logprob": -0.18627313,
        "compression_ratio": 1.7397261,
        "no_speech_prob": 5.1377977e-12,
    },
    {
        "id": 8,
        "seek": 2400,
        "start": 38,
        "end": 43.36,
        "text": " We will then receive the data from each CCTV and find out which CCTV has the highest amount",
        "tokens": [
            51065,
            492,
            486,
            550,
            4774,
            264,
            1412,
            490,
            1184,
            44838,
            293,
            915,
            484,
            597,
            44838,
            575,
            264,
            6343,
            2372,
            51333,
        ],
        "temperature": 0,
        "avg_logprob": -0.18627313,
        "compression_ratio": 1.7397261,
        "no_speech_prob": 5.1377977e-12,
    },
    {
        "id": 9,
        "seek": 2400,
        "start": 43.36,
        "end": 45.2,
        "text": " of ladder activity.",
        "tokens": [51333, 295, 18325, 5191, 13, 51425],
        "temperature": 0,
        "avg_logprob": -0.18627313,
        "compression_ratio": 1.7397261,
        "no_speech_prob": 5.1377977e-12,
    },
    {
        "id": 10,
        "seek": 2400,
        "start": 45.2,
        "end": 46.52,
        "text": " What can we do with such information?",
        "tokens": [51425, 708, 393, 321, 360, 365, 1270, 1589, 30, 51491],
        "temperature": 0,
        "avg_logprob": -0.18627313,
        "compression_ratio": 1.7397261,
        "no_speech_prob": 5.1377977e-12,
    },
    {
        "id": 11,
        "seek": 2400,
        "start": 46.52,
        "end": 48.52,
        "text": " Let's move on.",
        "tokens": [51491, 961, 311, 1286, 322, 13, 51591],
        "temperature": 0,
        "avg_logprob": -0.18627313,
        "compression_ratio": 1.7397261,
        "no_speech_prob": 5.1377977e-12,
    },
    {
        "id": 12,
        "seek": 2400,
        "start": 48.52,
        "end": 53.6,
        "text": " Instead of having a supervisor at every location, we can utilize the previous example to flag",
        "tokens": [
            51591,
            7156,
            295,
            1419,
            257,
            24610,
            412,
            633,
            4914,
            11,
            321,
            393,
            16117,
            264,
            3894,
            1365,
            281,
            7166,
            51845,
        ],
        "temperature": 0,
        "avg_logprob": -0.18627313,
        "compression_ratio": 1.7397261,
        "no_speech_prob": 5.1377977e-12,
    },
    {
        "id": 13,
        "seek": 5360,
        "start": 53.6,
        "end": 57.38,
        "text": " locations that have high ladder activity. This will not only increase the",
        "tokens": [
            50365,
            9253,
            300,
            362,
            1090,
            18325,
            5191,
            13,
            639,
            486,
            406,
            787,
            3488,
            264,
            50554,
        ],
        "temperature": 0,
        "avg_logprob": -0.17662421,
        "compression_ratio": 1.6244541,
        "no_speech_prob": 1.8979991e-12,
    },
    {
        "id": 14,
        "seek": 5360,
        "start": 57.38,
        "end": 63.5,
        "text": " productivity but also reduce supervisor costs as well. And also we can install",
        "tokens": [
            50554,
            15604,
            457,
            611,
            5407,
            24610,
            5497,
            382,
            731,
            13,
            400,
            611,
            321,
            393,
            3625,
            50860,
        ],
        "temperature": 0,
        "avg_logprob": -0.17662421,
        "compression_ratio": 1.6244541,
        "no_speech_prob": 1.8979991e-12,
    },
    {
        "id": 15,
        "seek": 5360,
        "start": 63.5,
        "end": 67.66,
        "text": " fixed ladders in high usage areas which are generally more safer than portable",
        "tokens": [
            50860,
            6806,
            6632,
            15633,
            294,
            1090,
            14924,
            3179,
            597,
            366,
            5101,
            544,
            15856,
            813,
            21800,
            51068,
        ],
        "temperature": 0,
        "avg_logprob": -0.17662421,
        "compression_ratio": 1.6244541,
        "no_speech_prob": 1.8979991e-12,
    },
    {
        "id": 16,
        "seek": 5360,
        "start": 67.66,
        "end": 72.78,
        "text": " ladders that these workers usually bring. This concludes the",
        "tokens": [
            51068,
            6632,
            15633,
            300,
            613,
            5600,
            2673,
            1565,
            13,
            639,
            24643,
            264,
            51324,
        ],
        "temperature": 0,
        "avg_logprob": -0.17662421,
        "compression_ratio": 1.6244541,
        "no_speech_prob": 1.8979991e-12,
    },
    {
        "id": 17,
        "seek": 5360,
        "start": 72.78,
        "end": 79.1,
        "text": " business case. Now let's move on to the annotated image dataset. The dataset is",
        "tokens": [
            51324,
            1606,
            1389,
            13,
            823,
            718,
            311,
            1286,
            322,
            281,
            264,
            25339,
            770,
            3256,
            28872,
            13,
            440,
            28872,
            307,
            51640,
        ],
        "temperature": 0,
        "avg_logprob": -0.17662421,
        "compression_ratio": 1.6244541,
        "no_speech_prob": 1.8979991e-12,
    },
    {
        "id": 18,
        "seek": 7910,
        "start": 79.1,
        "end": 83.74,
        "text": " retrieved from RoboFlow Universe and you can find the dataset source here.",
        "tokens": [
            50365,
            19817,
            937,
            490,
            5424,
            78,
            31091,
            18307,
            293,
            291,
            393,
            915,
            264,
            28872,
            4009,
            510,
            13,
            50597,
        ],
        "temperature": 0,
        "avg_logprob": -0.25054562,
        "compression_ratio": 1.6409266,
        "no_speech_prob": 1.7143877e-10,
    },
    {
        "id": 19,
        "seek": 7910,
        "start": 85.02,
        "end": 89.9,
        "text": " Let's now proceed with learning how the annotation process project. So here's how we're gonna do.",
        "tokens": [
            50661,
            961,
            311,
            586,
            8991,
            365,
            2539,
            577,
            264,
            48654,
            1399,
            1716,
            13,
            407,
            510,
            311,
            577,
            321,
            434,
            799,
            360,
            13,
            50905,
        ],
        "temperature": 0,
        "avg_logprob": -0.25054562,
        "compression_ratio": 1.6409266,
        "no_speech_prob": 1.7143877e-10,
    },
    {
        "id": 20,
        "seek": 7910,
        "start": 89.9,
        "end": 93.74,
        "text": " Since we're doing cigarettes, let's just name it cigarette annotation group will be",
        "tokens": [
            50905,
            4162,
            321,
            434,
            884,
            29244,
            11,
            718,
            311,
            445,
            1315,
            309,
            26184,
            48654,
            1594,
            486,
            312,
            51097,
        ],
        "temperature": 0,
        "avg_logprob": -0.25054562,
        "compression_ratio": 1.6409266,
        "no_speech_prob": 1.7143877e-10,
    },
    {
        "id": 21,
        "seek": 7910,
        "start": 94.62,
        "end": 98.86,
        "text": " BUD. And the reason why it's BUD is because maintaining compatibility with the data,",
        "tokens": [
            51141,
            363,
            9438,
            13,
            400,
            264,
            1778,
            983,
            309,
            311,
            363,
            9438,
            307,
            570,
            14916,
            34237,
            365,
            264,
            1412,
            11,
            51353,
        ],
        "temperature": 0,
        "avg_logprob": -0.25054562,
        "compression_ratio": 1.6409266,
        "no_speech_prob": 1.7143877e-10,
    },
    {
        "id": 22,
        "seek": 7910,
        "start": 98.86,
        "end": 103.66,
        "text": " we're going to have to name it with a similar label which is BUD. Object Detection,",
        "tokens": [
            51353,
            321,
            434,
            516,
            281,
            362,
            281,
            1315,
            309,
            365,
            257,
            2531,
            7645,
            597,
            307,
            363,
            9438,
            13,
            24753,
            4237,
            10183,
            11,
            51593,
        ],
        "temperature": 0,
        "avg_logprob": -0.25054562,
        "compression_ratio": 1.6409266,
        "no_speech_prob": 1.7143877e-10,
    },
    {
        "id": 23,
        "seek": 10366,
        "start": 103.66,
        "end": 107.26,
        "text": " very private project okay and i've",
        "tokens": [50365, 588, 4551, 1716, 1392, 293, 741, 600, 50545],
        "temperature": 0,
        "avg_logprob": -0.3537686,
        "compression_ratio": 1.7115384,
        "no_speech_prob": 1.0728971e-10,
    },
    {
        "id": 24,
        "seek": 10366,
        "start": 107.26,
        "end": 109.9,
        "text": " downloaded my data set i go to annotate",
        "tokens": [50545, 21748, 452, 1412, 992, 741, 352, 281, 25339, 473, 50677],
        "temperature": 0,
        "avg_logprob": -0.3537686,
        "compression_ratio": 1.7115384,
        "no_speech_prob": 1.0728971e-10,
    },
    {
        "id": 25,
        "seek": 10366,
        "start": 109.9,
        "end": 112.54,
        "text": " i click on here i can start annotating",
        "tokens": [50677, 741, 2052, 322, 510, 741, 393, 722, 25339, 990, 50809],
        "temperature": 0,
        "avg_logprob": -0.3537686,
        "compression_ratio": 1.7115384,
        "no_speech_prob": 1.0728971e-10,
    },
    {
        "id": 26,
        "seek": 10366,
        "start": 112.54,
        "end": 115.26,
        "text": " the images start manually uploading",
        "tokens": [50809, 264, 5267, 722, 16945, 27301, 50945],
        "temperature": 0,
        "avg_logprob": -0.3537686,
        "compression_ratio": 1.7115384,
        "no_speech_prob": 1.0728971e-10,
    },
    {
        "id": 27,
        "seek": 10366,
        "start": 115.26,
        "end": 117.98,
        "text": " let's start manually annotating okay",
        "tokens": [50945, 718, 311, 722, 16945, 25339, 990, 1392, 51081],
        "temperature": 0,
        "avg_logprob": -0.3537686,
        "compression_ratio": 1.7115384,
        "no_speech_prob": 1.0728971e-10,
    },
    {
        "id": 28,
        "seek": 10366,
        "start": 117.98,
        "end": 123.02,
        "text": " let's go zoom in annotate and we should",
        "tokens": [51081, 718, 311, 352, 8863, 294, 25339, 473, 293, 321, 820, 51333],
        "temperature": 0,
        "avg_logprob": -0.3537686,
        "compression_ratio": 1.7115384,
        "no_speech_prob": 1.0728971e-10,
    },
    {
        "id": 29,
        "seek": 10366,
        "start": 123.02,
        "end": 129.66,
        "text": " call it bud yes we got three images okay",
        "tokens": [51333, 818, 309, 3265, 2086, 321, 658, 1045, 5267, 1392, 51665],
        "temperature": 0,
        "avg_logprob": -0.3537686,
        "compression_ratio": 1.7115384,
        "no_speech_prob": 1.0728971e-10,
    },
    {
        "id": 30,
        "seek": 13366,
        "start": 133.66,
        "end": 149.3,
        "text": " and now that we're done we can exit add three images to data set we add all to training",
        "tokens": [
            50365,
            293,
            586,
            300,
            321,
            434,
            1096,
            321,
            393,
            11043,
            909,
            1045,
            5267,
            281,
            1412,
            992,
            321,
            909,
            439,
            281,
            3097,
            51147,
        ],
        "temperature": 0,
        "avg_logprob": -0.24241233,
        "compression_ratio": 1.6503067,
        "no_speech_prob": 1.19715305e-11,
    },
    {
        "id": 31,
        "seek": 13366,
        "start": 149.3,
        "end": 156.1,
        "text": " because we already have we will have our own we'll have our own testing data set and we",
        "tokens": [
            51147,
            570,
            321,
            1217,
            362,
            321,
            486,
            362,
            527,
            1065,
            321,
            603,
            362,
            527,
            1065,
            4997,
            1412,
            992,
            293,
            321,
            51487,
        ],
        "temperature": 0,
        "avg_logprob": -0.24241233,
        "compression_ratio": 1.6503067,
        "no_speech_prob": 1.19715305e-11,
    },
    {
        "id": 32,
        "seek": 13366,
        "start": 156.1,
        "end": 162.64,
        "text": " can press new version resize it so that meets the requirements of the project no augmentation",
        "tokens": [
            51487,
            393,
            1886,
            777,
            3037,
            50069,
            309,
            370,
            300,
            13961,
            264,
            7728,
            295,
            264,
            1716,
            572,
            14501,
            19631,
            51814,
        ],
        "temperature": 0,
        "avg_logprob": -0.24241233,
        "compression_ratio": 1.6503067,
        "no_speech_prob": 1.19715305e-11,
    },
    {
        "id": 33,
        "seek": 164,
        "start": 162.64,
        "end": 175.30249,
        "text": " steps create let it create for a while very nice I will go and download the dataset as Pascal Download zip to computer continue Okay and now we can go to",
        "tokens": [
            50365,
            4439,
            11,
            1884,
            11,
            718,
            309,
            1884,
            337,
            257,
            1339,
            11,
            588,
            1481,
            11,
            286,
            486,
            352,
            293,
            5484,
            264,
            50654,
            50654,
            41723,
            13,
            50605,
            50637,
            32282,
            20730,
            281,
            3820,
            11,
            2354,
            13,
            1033,
            11,
            293,
            586,
            321,
            393,
            352,
            281,
            485,
            50889,
        ],
        "temperature": 0,
        "avg_logprob": -0.3614078,
        "compression_ratio": 1.4064171,
        "no_speech_prob": 4.02065e-11,
    },
    {
        "id": 34,
        "seek": 164,
        "start": 178.8225,
        "end": 179.4625,
        "text": " Unzip it.",
        "tokens": [51065, 1156, 27268, 309, 13, 51097],
        "temperature": 0,
        "avg_logprob": -0.3614078,
        "compression_ratio": 1.4064171,
        "no_speech_prob": 4.02065e-11,
    },
    {
        "id": 35,
        "seek": 164,
        "start": 182.02249,
        "end": 184.9025,
        "text": " We go and check, look at one of the XMLs.",
        "tokens": [
            51225,
            492,
            352,
            293,
            1520,
            11,
            574,
            412,
            472,
            295,
            264,
            43484,
            82,
            13,
            51369,
        ],
        "temperature": 0,
        "avg_logprob": -0.3614078,
        "compression_ratio": 1.4064171,
        "no_speech_prob": 4.02065e-11,
    },
    {
        "id": 36,
        "seek": 164,
        "start": 187.30249,
        "end": 190.66249,
        "text": " Let's take a look. Okay, name is Bart, bounding box is here.",
        "tokens": [
            51489,
            961,
            311,
            747,
            257,
            574,
            13,
            1033,
            11,
            1315,
            307,
            22338,
            11,
            5472,
            278,
            2424,
            307,
            510,
            13,
            51657,
        ],
        "temperature": 0,
        "avg_logprob": -0.3614078,
        "compression_ratio": 1.4064171,
        "no_speech_prob": 4.02065e-11,
    },
    {
        "id": 37,
        "seek": 2748,
        "start": 190.66249,
        "end": 196.5425,
        "text": " We start by initializing and making the directory paths as well as annotations.",
        "tokens": [
            50365,
            492,
            722,
            538,
            5883,
            3319,
            293,
            1455,
            264,
            21120,
            14518,
            382,
            731,
            382,
            25339,
            763,
            13,
            50659,
        ],
        "temperature": 0,
        "avg_logprob": -0.19023995,
        "compression_ratio": 1.6504065,
        "no_speech_prob": 1.2161295e-11,
    },
    {
        "id": 38,
        "seek": 2748,
        "start": 197.02249,
        "end": 201.2425,
        "text": " Annotations are lists which represent the desired CSV format by Google.",
        "tokens": [
            50683,
            1107,
            2247,
            763,
            366,
            14511,
            597,
            2906,
            264,
            14721,
            48814,
            7877,
            538,
            3329,
            13,
            50894,
        ],
        "temperature": 0,
        "avg_logprob": -0.19023995,
        "compression_ratio": 1.6504065,
        "no_speech_prob": 1.2161295e-11,
    },
    {
        "id": 39,
        "seek": 2748,
        "start": 201.7625,
        "end": 206.2625,
        "text": " We also have an annotation limit to retrieve the desired amount of 300 annotations.",
        "tokens": [
            50920,
            492,
            611,
            362,
            364,
            48654,
            4948,
            281,
            30254,
            264,
            14721,
            2372,
            295,
            6641,
            25339,
            763,
            13,
            51145,
        ],
        "temperature": 0,
        "avg_logprob": -0.19023995,
        "compression_ratio": 1.6504065,
        "no_speech_prob": 1.2161295e-11,
    },
    {
        "id": 40,
        "seek": 2748,
        "start": 206.80249,
        "end": 211.6825,
        "text": " Looking at the main function, which is process underscore files, we are checking our file issues.",
        "tokens": [
            51172,
            11053,
            412,
            264,
            2135,
            2445,
            11,
            597,
            307,
            1399,
            37556,
            7098,
            11,
            321,
            366,
            8568,
            527,
            3991,
            2663,
            13,
            51416,
        ],
        "temperature": 0,
        "avg_logprob": -0.19023995,
        "compression_ratio": 1.6504065,
        "no_speech_prob": 1.2161295e-11,
    },
    {
        "id": 41,
        "seek": 2748,
        "start": 212.2625,
        "end": 217.66249,
        "text": " This will check that the XML and JPEG files exist, contains annotations,",
        "tokens": [
            51445,
            639,
            486,
            1520,
            300,
            264,
            43484,
            293,
            508,
            5208,
            38,
            7098,
            2514,
            11,
            8306,
            25339,
            763,
            11,
            51715,
        ],
        "temperature": 0,
        "avg_logprob": -0.19023995,
        "compression_ratio": 1.6504065,
        "no_speech_prob": 1.2161295e-11,
    },
    {
        "id": 42,
        "seek": 5448,
        "start": 217.66249,
        "end": 220.7625,
        "text": " It contains annotations for both persons and labels.",
        "tokens": [
            50365,
            467,
            8306,
            25339,
            763,
            337,
            1293,
            14453,
            293,
            16949,
            13,
            50520,
        ],
        "temperature": 0,
        "avg_logprob": -0.17624693,
        "compression_ratio": 1.617647,
        "no_speech_prob": 3.0195204e-12,
    },
    {
        "id": 43,
        "seek": 5448,
        "start": 221.2225,
        "end": 226.7825,
        "text": " Make sure that the JPEG file has a resolution of 640x640 and the bounding box is valid.",
        "tokens": [
            50543,
            4387,
            988,
            300,
            264,
            508,
            5208,
            38,
            3991,
            575,
            257,
            8669,
            295,
            1386,
            5254,
            87,
            21,
            5254,
            293,
            264,
            5472,
            278,
            2424,
            307,
            7363,
            13,
            50821,
        ],
        "temperature": 0,
        "avg_logprob": -0.17624693,
        "compression_ratio": 1.617647,
        "no_speech_prob": 3.0195204e-12,
    },
    {
        "id": 44,
        "seek": 5448,
        "start": 227.3425,
        "end": 230.7625,
        "text": " Valid bounding boxes means that the coordinates follow logic here.",
        "tokens": [
            50849,
            7188,
            327,
            5472,
            278,
            9002,
            1355,
            300,
            264,
            21056,
            1524,
            9952,
            510,
            13,
            51020,
        ],
        "temperature": 0,
        "avg_logprob": -0.17624693,
        "compression_ratio": 1.617647,
        "no_speech_prob": 3.0195204e-12,
    },
    {
        "id": 45,
        "seek": 5448,
        "start": 231.1825,
        "end": 233.3225,
        "text": " That makes it possible to draw a rectangle.",
        "tokens": [51041, 663, 1669, 309, 1944, 281, 2642, 257, 21930, 13, 51148],
        "temperature": 0,
        "avg_logprob": -0.17624693,
        "compression_ratio": 1.617647,
        "no_speech_prob": 3.0195204e-12,
    },
    {
        "id": 46,
        "seek": 5448,
        "start": 233.9625,
        "end": 239.9825,
        "text": " However, if the bounding boxes have a value of 641, which is quite common, we'll correct it to 640.",
        "tokens": [
            51180,
            2908,
            11,
            498,
            264,
            5472,
            278,
            9002,
            362,
            257,
            2158,
            295,
            12145,
            16,
            11,
            597,
            307,
            1596,
            2689,
            11,
            321,
            603,
            3006,
            309,
            281,
            1386,
            5254,
            13,
            51481,
        ],
        "temperature": 0,
        "avg_logprob": -0.17624693,
        "compression_ratio": 1.617647,
        "no_speech_prob": 3.0195204e-12,
    },
    {
        "id": 47,
        "seek": 5448,
        "start": 240.30249,
        "end": 245.02249,
        "text": " If the file pairs do not meet the criteria, then we'll call the moveToUnwanted function,",
        "tokens": [
            51497,
            759,
            264,
            3991,
            15494,
            360,
            406,
            1677,
            264,
            11101,
            11,
            550,
            321,
            603,
            818,
            264,
            1286,
            13342,
            12405,
            86,
            15587,
            2445,
            11,
            51733,
        ],
        "temperature": 0,
        "avg_logprob": -0.17624693,
        "compression_ratio": 1.617647,
        "no_speech_prob": 3.0195204e-12,
    },
    {
        "id": 48,
        "seek": 8184,
        "start": 245.02249,
        "end": 248.38249,
        "text": " which moves the file pairs to the categorized unwanted directory.",
        "tokens": [
            50365,
            597,
            6067,
            264,
            3991,
            15494,
            281,
            264,
            19250,
            1602,
            33745,
            21120,
            13,
            50533,
        ],
        "temperature": 0,
        "avg_logprob": -0.18798661,
        "compression_ratio": 1.7631578,
        "no_speech_prob": 2.9853101e-12,
    },
    {
        "id": 49,
        "seek": 8184,
        "start": 249.1025,
        "end": 254.3425,
        "text": " If the file pairs meet the criteria, then we will call process.xml,",
        "tokens": [
            50569,
            759,
            264,
            3991,
            15494,
            1677,
            264,
            11101,
            11,
            550,
            321,
            486,
            818,
            1399,
            13,
            87,
            15480,
            11,
            50831,
        ],
        "temperature": 0,
        "avg_logprob": -0.18798661,
        "compression_ratio": 1.7631578,
        "no_speech_prob": 2.9853101e-12,
    },
    {
        "id": 50,
        "seek": 8184,
        "start": 254.7625,
        "end": 258.5025,
        "text": " which extracts the annotations, normalizes the coordinates,",
        "tokens": [
            50852,
            597,
            8947,
            82,
            264,
            25339,
            763,
            11,
            2710,
            5660,
            264,
            21056,
            11,
            51039,
        ],
        "temperature": 0,
        "avg_logprob": -0.18798661,
        "compression_ratio": 1.7631578,
        "no_speech_prob": 2.9853101e-12,
    },
    {
        "id": 51,
        "seek": 8184,
        "start": 259.0025,
        "end": 262.4425,
        "text": " add to self.annotation and increment the self.annotation count.",
        "tokens": [
            51064,
            909,
            281,
            2698,
            13,
            969,
            310,
            399,
            293,
            26200,
            264,
            2698,
            13,
            969,
            310,
            399,
            1207,
            13,
            51236,
        ],
        "temperature": 0,
        "avg_logprob": -0.18798661,
        "compression_ratio": 1.7631578,
        "no_speech_prob": 2.9853101e-12,
    },
    {
        "id": 52,
        "seek": 8184,
        "start": 262.8425,
        "end": 267.3825,
        "text": " Once the count reaches the specified limit, the loop will break and no more files will be processed.",
        "tokens": [
            51256,
            3443,
            264,
            1207,
            14235,
            264,
            22206,
            4948,
            11,
            264,
            6367,
            486,
            1821,
            293,
            572,
            544,
            7098,
            486,
            312,
            18846,
            13,
            51483,
        ],
        "temperature": 0,
        "avg_logprob": -0.18798661,
        "compression_ratio": 1.7631578,
        "no_speech_prob": 2.9853101e-12,
    },
    {
        "id": 53,
        "seek": 8184,
        "start": 267.8225,
        "end": 269.9225,
        "text": " But what are the two extra functions below?",
        "tokens": [51505, 583, 437, 366, 264, 732, 2857, 6828, 2507, 30, 51610],
        "temperature": 0,
        "avg_logprob": -0.18798661,
        "compression_ratio": 1.7631578,
        "no_speech_prob": 2.9853101e-12,
    },
    {
        "id": 54,
        "seek": 10674,
        "start": 269.9225,
        "end": 273.98248,
        "text": " create CSV, basically takes self.annotations,",
        "tokens": [
            50365,
            1884,
            48814,
            11,
            1936,
            2516,
            2698,
            13,
            969,
            310,
            763,
            11,
            50568,
        ],
        "temperature": 0,
        "avg_logprob": -0.29404935,
        "compression_ratio": 1.6892858,
        "no_speech_prob": 2.542725e-12,
    },
    {
        "id": 55,
        "seek": 10674,
        "start": 273.98248,
        "end": 277.2225,
        "text": " convert it into a data frame and export it as CSV.",
        "tokens": [
            50568,
            7620,
            309,
            666,
            257,
            1412,
            3920,
            293,
            10725,
            309,
            382,
            48814,
            13,
            50730,
        ],
        "temperature": 0,
        "avg_logprob": -0.29404935,
        "compression_ratio": 1.6892858,
        "no_speech_prob": 2.542725e-12,
    },
    {
        "id": 56,
        "seek": 10674,
        "start": 277.2225,
        "end": 280.16248,
        "text": " printSummary counts the number of files in each directory",
        "tokens": [
            50730,
            4482,
            50,
            40879,
            822,
            14893,
            264,
            1230,
            295,
            7098,
            294,
            1184,
            21120,
            50877,
        ],
        "temperature": 0,
        "avg_logprob": -0.29404935,
        "compression_ratio": 1.6892858,
        "no_speech_prob": 2.542725e-12,
    },
    {
        "id": 57,
        "seek": 10674,
        "start": 280.16248,
        "end": 282.5625,
        "text": " and prints the summary message like this.",
        "tokens": [50877, 293, 22305, 264, 12691, 3636, 411, 341, 13, 50997],
        "temperature": 0,
        "avg_logprob": -0.29404935,
        "compression_ratio": 1.6892858,
        "no_speech_prob": 2.542725e-12,
    },
    {
        "id": 58,
        "seek": 10674,
        "start": 282.5625,
        "end": 285.9625,
        "text": " Now let's move on to the verification of the CSV file.",
        "tokens": [
            50997,
            823,
            718,
            311,
            1286,
            322,
            281,
            264,
            30206,
            295,
            264,
            48814,
            3991,
            13,
            51167,
        ],
        "temperature": 0,
        "avg_logprob": -0.29404935,
        "compression_ratio": 1.6892858,
        "no_speech_prob": 2.542725e-12,
    },
    {
        "id": 59,
        "seek": 10674,
        "start": 285.9625,
        "end": 289.6825,
        "text": " Scrolling past the file processing and looking at the CSV validator,",
        "tokens": [
            51167,
            2747,
            18688,
            1791,
            264,
            3991,
            9007,
            293,
            1237,
            412,
            264,
            48814,
            7363,
            1639,
            11,
            51353,
        ],
        "temperature": 0,
        "avg_logprob": -0.29404935,
        "compression_ratio": 1.6892858,
        "no_speech_prob": 2.542725e-12,
    },
    {
        "id": 60,
        "seek": 10674,
        "start": 289.6825,
        "end": 292.2625,
        "text": " we understand that the check it does are to ensure that",
        "tokens": [
            51353,
            321,
            1223,
            300,
            264,
            1520,
            309,
            775,
            366,
            281,
            5586,
            300,
            51482,
        ],
        "temperature": 0,
        "avg_logprob": -0.29404935,
        "compression_ratio": 1.6892858,
        "no_speech_prob": 2.542725e-12,
    },
    {
        "id": 61,
        "seek": 10674,
        "start": 292.2625,
        "end": 295.1825,
        "text": " number one, the number of columns add up to 10,",
        "tokens": [
            51482,
            1230,
            472,
            11,
            264,
            1230,
            295,
            13766,
            909,
            493,
            281,
            1266,
            11,
            51628,
        ],
        "temperature": 0,
        "avg_logprob": -0.29404935,
        "compression_ratio": 1.6892858,
        "no_speech_prob": 2.542725e-12,
    },
    {
        "id": 62,
        "seek": 10674,
        "start": 295.1825,
        "end": 298.5625,
        "text": " the image path starts with gs colon slash slash,",
        "tokens": [
            51628,
            264,
            3256,
            3100,
            3719,
            365,
            290,
            82,
            8255,
            17330,
            17330,
            11,
            51797,
        ],
        "temperature": 0,
        "avg_logprob": -0.29404935,
        "compression_ratio": 1.6892858,
        "no_speech_prob": 2.542725e-12,
    },
    {
        "id": 63,
        "seek": 13538,
        "start": 298.5625,
        "end": 302.4425,
        "text": " checks the label, makes sure that the coordinates are at the correct locations,",
        "tokens": [
            50365,
            13834,
            264,
            7645,
            11,
            1669,
            988,
            300,
            264,
            21056,
            366,
            412,
            264,
            3006,
            9253,
            11,
            50559,
        ],
        "temperature": 0,
        "avg_logprob": -0.18279967,
        "compression_ratio": 1.7769784,
        "no_speech_prob": 2.4549184e-12,
    },
    {
        "id": 64,
        "seek": 13538,
        "start": 302.9425,
        "end": 306.0225,
        "text": " checks that Xmin and Ymin is less than Xmax and Ymax,",
        "tokens": [
            50584,
            13834,
            300,
            1783,
            2367,
            293,
            398,
            2367,
            307,
            1570,
            813,
            1783,
            41167,
            293,
            398,
            41167,
            11,
            50738,
        ],
        "temperature": 0,
        "avg_logprob": -0.18279967,
        "compression_ratio": 1.7769784,
        "no_speech_prob": 2.4549184e-12,
    },
    {
        "id": 65,
        "seek": 13538,
        "start": 306.3825,
        "end": 311.1225,
        "text": " and also to make sure that the columns which are supposed to be empty are empty for each row.",
        "tokens": [
            50756,
            293,
            611,
            281,
            652,
            988,
            300,
            264,
            13766,
            597,
            366,
            3442,
            281,
            312,
            6707,
            366,
            6707,
            337,
            1184,
            5386,
            13,
            50993,
        ],
        "temperature": 0,
        "avg_logprob": -0.18279967,
        "compression_ratio": 1.7769784,
        "no_speech_prob": 2.4549184e-12,
    },
    {
        "id": 66,
        "seek": 13538,
        "start": 311.64252,
        "end": 314.9625,
        "text": " It also checks across the dataset that the annotation count is 300,",
        "tokens": [
            51019,
            467,
            611,
            13834,
            2108,
            264,
            28872,
            300,
            264,
            48654,
            1207,
            307,
            6641,
            11,
            51185,
        ],
        "temperature": 0,
        "avg_logprob": -0.18279967,
        "compression_ratio": 1.7769784,
        "no_speech_prob": 2.4549184e-12,
    },
    {
        "id": 67,
        "seek": 13538,
        "start": 315.4225,
        "end": 318.5625,
        "text": " checks the class balance, and prints out a report that we can see here.",
        "tokens": [
            51208,
            13834,
            264,
            1508,
            4772,
            11,
            293,
            22305,
            484,
            257,
            2275,
            300,
            321,
            393,
            536,
            510,
            13,
            51365,
        ],
        "temperature": 0,
        "avg_logprob": -0.18279967,
        "compression_ratio": 1.7769784,
        "no_speech_prob": 2.4549184e-12,
    },
    {
        "id": 68,
        "seek": 13538,
        "start": 319.16248,
        "end": 323.3425,
        "text": " We are also checking that the uploaded CSV matches one-to-one with our training directory",
        "tokens": [
            51395,
            492,
            366,
            611,
            8568,
            300,
            264,
            17135,
            48814,
            10676,
            472,
            12,
            1353,
            12,
            546,
            365,
            527,
            3097,
            21120,
            51604,
        ],
        "temperature": 0,
        "avg_logprob": -0.18279967,
        "compression_ratio": 1.7769784,
        "no_speech_prob": 2.4549184e-12,
    },
    {
        "id": 69,
        "seek": 13538,
        "start": 323.3425,
        "end": 325.66248,
        "text": " by using the set function in Python.",
        "tokens": [51604, 538, 1228, 264, 992, 2445, 294, 15329, 13, 51720],
        "temperature": 0,
        "avg_logprob": -0.18279967,
        "compression_ratio": 1.7769784,
        "no_speech_prob": 2.4549184e-12,
    },
    {
        "id": 70,
        "seek": 16248,
        "start": 325.66248,
        "end": 332.14252,
        "text": " Finally, we upload the file, retrieve an image, and get a bucket size which is 5.32 MB.",
        "tokens": [
            50365,
            6288,
            11,
            321,
            6580,
            264,
            3991,
            11,
            30254,
            364,
            3256,
            11,
            293,
            483,
            257,
            13058,
            2744,
            597,
            307,
            1025,
            13,
            11440,
            28866,
            13,
            50689,
        ],
        "temperature": 0,
        "avg_logprob": -0.22219276,
        "compression_ratio": 1.5414847,
        "no_speech_prob": 6.7480665e-12,
    },
    {
        "id": 71,
        "seek": 334,
        "start": 332.14252,
        "end": 345.82498,
        "text": " Let now move on to the training evaluation and deployment of the object detection model So in terms of training the model all the instructions were followed so why not let take a look at the model evaluation The letters precision is very good but not for the person precision",
        "tokens": [
            50689,
            961,
            311,
            586,
            1286,
            322,
            281,
            264,
            3097,
            11,
            13344,
            11,
            293,
            19317,
            295,
            264,
            2657,
            17784,
            2316,
            13,
            50932,
            50932,
            407,
            294,
            2115,
            295,
            3097,
            264,
            2316,
            11,
            439,
            264,
            9415,
            645,
            6263,
            11,
            50628,
            50634,
            370,
            983,
            406,
            718,
            311,
            747,
            257,
            574,
            412,
            264,
            2316,
            13344,
            13,
            50748,
            50777,
            440,
            7825,
            6,
            18356,
            307,
            588,
            665,
            11,
            457,
            406,
            337,
            264,
            954,
            311,
            18356,
            13,
            50924,
        ],
        "temperature": 0,
        "avg_logprob": -0.16831592,
        "compression_ratio": 1.6980519,
        "no_speech_prob": 6.197188e-12,
    },
    {
        "id": 72,
        "seek": 334,
        "start": 346.305,
        "end": 349.865,
        "text": " Probably because the letters have this sort of iconic A-frame image,",
        "tokens": [
            50948,
            9210,
            570,
            264,
            7825,
            362,
            341,
            1333,
            295,
            15762,
            316,
            12,
            17265,
            3256,
            11,
            51126,
        ],
        "temperature": 0,
        "avg_logprob": -0.16831592,
        "compression_ratio": 1.6980519,
        "no_speech_prob": 6.197188e-12,
    },
    {
        "id": 73,
        "seek": 334,
        "start": 350.245,
        "end": 351.805,
        "text": " whereas persons can look very different,",
        "tokens": [51145, 9735, 14453, 393, 574, 588, 819, 11, 51223],
        "temperature": 0,
        "avg_logprob": -0.16831592,
        "compression_ratio": 1.6980519,
        "no_speech_prob": 6.197188e-12,
    },
    {
        "id": 74,
        "seek": 334,
        "start": 351.94498,
        "end": 354.26498,
        "text": " with sometimes only the legs being shown in the image.",
        "tokens": [
            51230,
            365,
            2171,
            787,
            264,
            5668,
            885,
            4898,
            294,
            264,
            3256,
            13,
            51346,
        ],
        "temperature": 0,
        "avg_logprob": -0.16831592,
        "compression_ratio": 1.6980519,
        "no_speech_prob": 6.197188e-12,
    },
    {
        "id": 75,
        "seek": 334,
        "start": 354.965,
        "end": 358.72498,
        "text": " Looking at the confidence and intersection over union thresholds,",
        "tokens": [
            51381,
            11053,
            412,
            264,
            6687,
            293,
            15236,
            670,
            11671,
            14678,
            82,
            11,
            51569,
        ],
        "temperature": 0,
        "avg_logprob": -0.16831592,
        "compression_ratio": 1.6980519,
        "no_speech_prob": 6.197188e-12,
    },
    {
        "id": 76,
        "seek": 334,
        "start": 358.72498,
        "end": 361.025,
        "text": " let's define what will happen if we adjust them.",
        "tokens": [
            51569,
            718,
            311,
            6964,
            437,
            486,
            1051,
            498,
            321,
            4369,
            552,
            13,
            51684,
        ],
        "temperature": 0,
        "avg_logprob": -0.16831592,
        "compression_ratio": 1.6980519,
        "no_speech_prob": 6.197188e-12,
    },
    {
        "id": 77,
        "seek": 2972,
        "start": 361.025,
        "end": 374.845,
        "text": " So, higher confidence means that precision will increase but recall will decrease, which is useful when false positives like warning all the supervisors about leather misuse could be quite disruptive and costly.",
        "tokens": [
            50365,
            407,
            11,
            2946,
            6687,
            1355,
            300,
            18356,
            486,
            3488,
            457,
            9901,
            486,
            11514,
            11,
            597,
            307,
            4420,
            562,
            7908,
            35127,
            411,
            9164,
            439,
            264,
            42218,
            466,
            12821,
            3346,
            438,
            727,
            312,
            1596,
            37865,
            293,
            28328,
            13,
            51056,
        ],
        "temperature": 0,
        "avg_logprob": -0.11783179,
        "compression_ratio": 1.7172996,
        "no_speech_prob": 7.0469546e-12,
    },
    {
        "id": 78,
        "seek": 2972,
        "start": 375.66498,
        "end": 386.72498,
        "text": " Lower confidence has the opposite effect, which is useful for monitoring or cases where you don't want false negatives like if you want to be certain that all the leather activities are captured.",
        "tokens": [
            51097,
            25523,
            6687,
            575,
            264,
            6182,
            1802,
            11,
            597,
            307,
            4420,
            337,
            11028,
            420,
            3331,
            689,
            291,
            500,
            380,
            528,
            7908,
            40019,
            411,
            498,
            291,
            528,
            281,
            312,
            1629,
            300,
            439,
            264,
            12821,
            5354,
            366,
            11828,
            13,
            51650,
        ],
        "temperature": 0,
        "avg_logprob": -0.11783179,
        "compression_ratio": 1.7172996,
        "no_speech_prob": 7.0469546e-12,
    },
    {
        "id": 79,
        "seek": 5542,
        "start": 386.72498,
        "end": 391.94498,
        "text": " Higher IOU means that the model's prediction must fit the strict positioning information",
        "tokens": [
            50365,
            31997,
            286,
            4807,
            1355,
            300,
            264,
            2316,
            311,
            17630,
            1633,
            3318,
            264,
            10910,
            26381,
            1589,
            50626,
        ],
        "temperature": 0,
        "avg_logprob": -0.20706052,
        "compression_ratio": 1.7843137,
        "no_speech_prob": 1.8538636e-12,
    },
    {
        "id": 80,
        "seek": 5542,
        "start": 391.94498,
        "end": 398.54498,
        "text": " set by the high IOU, which would reduce recall by rejecting the crack detections with less",
        "tokens": [
            50626,
            992,
            538,
            264,
            1090,
            286,
            4807,
            11,
            597,
            576,
            5407,
            9901,
            538,
            45401,
            264,
            6226,
            5531,
            626,
            365,
            1570,
            50956,
        ],
        "temperature": 0,
        "avg_logprob": -0.20706052,
        "compression_ratio": 1.7843137,
        "no_speech_prob": 1.8538636e-12,
    },
    {
        "id": 81,
        "seek": 5542,
        "start": 398.54498,
        "end": 401.005,
        "text": " accurate bounding box coordinates.",
        "tokens": [50956, 8559, 5472, 278, 2424, 21056, 13, 51079],
        "temperature": 0,
        "avg_logprob": -0.20706052,
        "compression_ratio": 1.7843137,
        "no_speech_prob": 1.8538636e-12,
    },
    {
        "id": 82,
        "seek": 5542,
        "start": 401.005,
        "end": 405.805,
        "text": " Lower IOU means that the bounding box coordinates are allowed to be more loose, which will increase",
        "tokens": [
            51079,
            25523,
            286,
            4807,
            1355,
            300,
            264,
            5472,
            278,
            2424,
            21056,
            366,
            4350,
            281,
            312,
            544,
            9612,
            11,
            597,
            486,
            3488,
            51319,
        ],
        "temperature": 0,
        "avg_logprob": -0.20706052,
        "compression_ratio": 1.7843137,
        "no_speech_prob": 1.8538636e-12,
    },
    {
        "id": 83,
        "seek": 5542,
        "start": 405.805,
        "end": 410.60498,
        "text": " recall by accepting partially accurate detections.",
        "tokens": [51319, 9901, 538, 17391, 18886, 8559, 5531, 626, 13, 51559],
        "temperature": 0,
        "avg_logprob": -0.20706052,
        "compression_ratio": 1.7843137,
        "no_speech_prob": 1.8538636e-12,
    },
    {
        "id": 84,
        "seek": 5542,
        "start": 410.60498,
        "end": 414.485,
        "text": " Looking at our options, I recommend setting a high confidence threshold for ladder, maybe",
        "tokens": [
            51559,
            11053,
            412,
            527,
            3956,
            11,
            286,
            2748,
            3287,
            257,
            1090,
            6687,
            14678,
            337,
            18325,
            11,
            1310,
            51753,
        ],
        "temperature": 0,
        "avg_logprob": -0.20706052,
        "compression_ratio": 1.7843137,
        "no_speech_prob": 1.8538636e-12,
    },
    {
        "id": 85,
        "seek": 8318,
        "start": 414.485,
        "end": 421.305,
        "text": " 0.7 and a medium threshold for person may be 0.5. The IOU can be set at 0.5",
        "tokens": [
            50365,
            1958,
            13,
            22,
            293,
            257,
            6399,
            14678,
            337,
            954,
            815,
            312,
            1958,
            13,
            20,
            13,
            440,
            286,
            4807,
            393,
            312,
            992,
            412,
            1958,
            13,
            20,
            50706,
        ],
        "temperature": 0,
        "avg_logprob": -0.1694275,
        "compression_ratio": 1.6594827,
        "no_speech_prob": 2.9272676e-12,
    },
    {
        "id": 86,
        "seek": 8318,
        "start": 421.305,
        "end": 425.22498,
        "text": " because it's the industry standard. So to expand on this rationale specifically",
        "tokens": [
            50706,
            570,
            309,
            311,
            264,
            3518,
            3832,
            13,
            407,
            281,
            5268,
            322,
            341,
            41989,
            4682,
            50902,
        ],
        "temperature": 0,
        "avg_logprob": -0.1694275,
        "compression_ratio": 1.6594827,
        "no_speech_prob": 2.9272676e-12,
    },
    {
        "id": 87,
        "seek": 8318,
        "start": 425.22498,
        "end": 431.865,
        "text": " the use case of detecting persons on ladders, this dual threshold approach",
        "tokens": [
            50902,
            264,
            764,
            1389,
            295,
            40237,
            14453,
            322,
            6632,
            15633,
            11,
            341,
            11848,
            14678,
            3109,
            51234,
        ],
        "temperature": 0,
        "avg_logprob": -0.1694275,
        "compression_ratio": 1.6594827,
        "no_speech_prob": 2.9272676e-12,
    },
    {
        "id": 88,
        "seek": 8318,
        "start": 431.865,
        "end": 436.26498,
        "text": " makes sense because the safety cost of not identifying a person on the ladder",
        "tokens": [
            51234,
            1669,
            2020,
            570,
            264,
            4514,
            2063,
            295,
            406,
            16696,
            257,
            954,
            322,
            264,
            18325,
            51454,
        ],
        "temperature": 0,
        "avg_logprob": -0.1694275,
        "compression_ratio": 1.6594827,
        "no_speech_prob": 2.9272676e-12,
    },
    {
        "id": 89,
        "seek": 8318,
        "start": 436.26498,
        "end": 441.465,
        "text": " is higher than identifying a ladder without the person. So to select testing",
        "tokens": [
            51454,
            307,
            2946,
            813,
            16696,
            257,
            18325,
            1553,
            264,
            954,
            13,
            407,
            281,
            3048,
            4997,
            51714,
        ],
        "temperature": 0,
        "avg_logprob": -0.1694275,
        "compression_ratio": 1.6594827,
        "no_speech_prob": 2.9272676e-12,
    },
    {
        "id": 90,
        "seek": 11016,
        "start": 441.465,
        "end": 446.645,
        "text": " images we create a testing directory, we get the set of images that we use in",
        "tokens": [
            50365,
            5267,
            321,
            1884,
            257,
            4997,
            21120,
            11,
            321,
            483,
            264,
            992,
            295,
            5267,
            300,
            321,
            764,
            294,
            50624,
        ],
        "temperature": 0,
        "avg_logprob": -0.15202266,
        "compression_ratio": 1.9221312,
        "no_speech_prob": 3.2154936e-12,
    },
    {
        "id": 91,
        "seek": 11016,
        "start": 446.645,
        "end": 450.88498,
        "text": " training, then the set of all the images available, and find the complement of",
        "tokens": [
            50624,
            3097,
            11,
            550,
            264,
            992,
            295,
            439,
            264,
            5267,
            2435,
            11,
            293,
            915,
            264,
            17103,
            295,
            50836,
        ],
        "temperature": 0,
        "avg_logprob": -0.15202266,
        "compression_ratio": 1.9221312,
        "no_speech_prob": 3.2154936e-12,
    },
    {
        "id": 92,
        "seek": 11016,
        "start": 450.88498,
        "end": 455.585,
        "text": " these two sets, select and move 10 of the images from the complement into the",
        "tokens": [
            50836,
            613,
            732,
            6352,
            11,
            3048,
            293,
            1286,
            1266,
            295,
            264,
            5267,
            490,
            264,
            17103,
            666,
            264,
            51071,
        ],
        "temperature": 0,
        "avg_logprob": -0.15202266,
        "compression_ratio": 1.9221312,
        "no_speech_prob": 3.2154936e-12,
    },
    {
        "id": 93,
        "seek": 11016,
        "start": 455.585,
        "end": 459.88498,
        "text": " test directory, then we create an endpoint. We call the test images function",
        "tokens": [
            51071,
            1500,
            21120,
            11,
            550,
            321,
            1884,
            364,
            35795,
            13,
            492,
            818,
            264,
            1500,
            5267,
            2445,
            51286,
        ],
        "temperature": 0,
        "avg_logprob": -0.15202266,
        "compression_ratio": 1.9221312,
        "no_speech_prob": 3.2154936e-12,
    },
    {
        "id": 94,
        "seek": 11016,
        "start": 459.88498,
        "end": 463.965,
        "text": " which deploys the model to the endpoint, gets the images from the test directory,",
        "tokens": [
            51286,
            597,
            368,
            49522,
            264,
            2316,
            281,
            264,
            35795,
            11,
            2170,
            264,
            5267,
            490,
            264,
            1500,
            21120,
            11,
            51490,
        ],
        "temperature": 0,
        "avg_logprob": -0.15202266,
        "compression_ratio": 1.9221312,
        "no_speech_prob": 3.2154936e-12,
    },
    {
        "id": 95,
        "seek": 11016,
        "start": 463.965,
        "end": 469.245,
        "text": " predict with this base64 encoded image, save the result to a JSON, and then",
        "tokens": [
            51490,
            6069,
            365,
            341,
            3096,
            19395,
            2058,
            12340,
            3256,
            11,
            3155,
            264,
            1874,
            281,
            257,
            31828,
            11,
            293,
            550,
            51754,
        ],
        "temperature": 0,
        "avg_logprob": -0.15202266,
        "compression_ratio": 1.9221312,
        "no_speech_prob": 3.2154936e-12,
    },
    {
        "id": 96,
        "seek": 13794,
        "start": 469.245,
        "end": 471.925,
        "text": " and then, un-deploy the model immediately.",
        "tokens": [
            50365,
            293,
            550,
            11,
            517,
            12,
            1479,
            2384,
            264,
            2316,
            4258,
            13,
            50499,
        ],
        "temperature": 0,
        "avg_logprob": -0.22771971,
        "compression_ratio": 1.7668161,
        "no_speech_prob": 1.6879966e-12,
    },
    {
        "id": 97,
        "seek": 13794,
        "start": 471.925,
        "end": 478.065,
        "text": " Then we draw the predictions with the drawPredictions function, which takes in the prediction.json,",
        "tokens": [
            50499,
            1396,
            321,
            2642,
            264,
            21264,
            365,
            264,
            2642,
            47,
            986,
            15607,
            2445,
            11,
            597,
            2516,
            294,
            264,
            17630,
            13,
            73,
            3015,
            11,
            50806,
        ],
        "temperature": 0,
        "avg_logprob": -0.22771971,
        "compression_ratio": 1.7668161,
        "no_speech_prob": 1.6879966e-12,
    },
    {
        "id": 98,
        "seek": 13794,
        "start": 478.065,
        "end": 483.945,
        "text": " filter the 40 predictions per image into the top P or top K, draw the boxes with the label",
        "tokens": [
            50806,
            6608,
            264,
            3356,
            21264,
            680,
            3256,
            666,
            264,
            1192,
            430,
            420,
            1192,
            591,
            11,
            2642,
            264,
            9002,
            365,
            264,
            7645,
            51100,
        ],
        "temperature": 0,
        "avg_logprob": -0.22771971,
        "compression_ratio": 1.7668161,
        "no_speech_prob": 1.6879966e-12,
    },
    {
        "id": 99,
        "seek": 13794,
        "start": 483.945,
        "end": 488.205,
        "text": " and the confidence, and save it into the predictions output directory.",
        "tokens": [
            51100,
            293,
            264,
            6687,
            11,
            293,
            3155,
            309,
            666,
            264,
            21264,
            5598,
            21120,
            13,
            51313,
        ],
        "temperature": 0,
        "avg_logprob": -0.22771971,
        "compression_ratio": 1.7668161,
        "no_speech_prob": 1.6879966e-12,
    },
    {
        "id": 100,
        "seek": 13794,
        "start": 488.205,
        "end": 492.72498,
        "text": " From there, we are able to see 3 examples of these predicted images, and across all these",
        "tokens": [
            51313,
            3358,
            456,
            11,
            321,
            366,
            1075,
            281,
            536,
            805,
            5110,
            295,
            613,
            19147,
            5267,
            11,
            293,
            2108,
            439,
            613,
            51539,
        ],
        "temperature": 0,
        "avg_logprob": -0.22771971,
        "compression_ratio": 1.7668161,
        "no_speech_prob": 1.6879966e-12,
    },
    {
        "id": 101,
        "seek": 16142,
        "start": 492.72498,
        "end": 498.60498,
        "text": " examples, the images generally had a high person detection confidence of 91% in",
        "tokens": [
            50365,
            5110,
            11,
            264,
            5267,
            5101,
            632,
            257,
            1090,
            954,
            17784,
            6687,
            295,
            31064,
            4,
            294,
            50659,
        ],
        "temperature": 0,
        "avg_logprob": -0.22043522,
        "compression_ratio": 1.6030928,
        "no_speech_prob": 1.5362747e-12,
    },
    {
        "id": 102,
        "seek": 16142,
        "start": 498.60498,
        "end": 504.425,
        "text": " clear full-body images, moderate confidence of 77% in partial views, and",
        "tokens": [
            50659,
            1850,
            1577,
            12,
            1067,
            5267,
            11,
            18174,
            6687,
            295,
            25546,
            4,
            294,
            14641,
            6809,
            11,
            293,
            50950,
        ],
        "temperature": 0,
        "avg_logprob": -0.22043522,
        "compression_ratio": 1.6030928,
        "no_speech_prob": 1.5362747e-12,
    },
    {
        "id": 103,
        "seek": 504,
        "start": 504.425,
        "end": 516.8075,
        "text": " unfortunately the failure to detect a partially visible foot in the last image The ladder detection has some interesting patterns with confidence score from 56 to 77",
        "tokens": [
            50950,
            7015,
            264,
            7763,
            281,
            5531,
            257,
            18886,
            8974,
            2671,
            294,
            264,
            1036,
            3256,
            13,
            50596,
            50628,
            440,
            18325,
            17784,
            575,
            512,
            1880,
            8294,
            11,
            50741,
            50746,
            365,
            6687,
            6175,
            490,
            19687,
            4,
            281,
            25546,
            8923,
            50982,
        ],
        "temperature": 0,
        "avg_logprob": -0.16350348,
        "compression_ratio": 1.7680608,
        "no_speech_prob": 2.116756e-12,
    },
    {
        "id": 104,
        "seek": 504,
        "start": 516.8075,
        "end": 522.6075,
        "text": " and notably, the model is more consistent with clearly visible ladder isolation and flat ground,",
        "tokens": [
            50982,
            293,
            31357,
            11,
            264,
            2316,
            307,
            544,
            8398,
            365,
            4448,
            8974,
            18325,
            16001,
            293,
            4962,
            2727,
            11,
            51272,
        ],
        "temperature": 0,
        "avg_logprob": -0.16350348,
        "compression_ratio": 1.7680608,
        "no_speech_prob": 2.116756e-12,
    },
    {
        "id": 105,
        "seek": 504,
        "start": 522.9675,
        "end": 525.5875,
        "text": " but lower confidence to ladders in active use,",
        "tokens": [51290, 457, 3126, 6687, 281, 6632, 15633, 294, 4967, 764, 11, 51421],
        "temperature": 0,
        "avg_logprob": -0.16350348,
        "compression_ratio": 1.7680608,
        "no_speech_prob": 2.116756e-12,
    },
    {
        "id": 106,
        "seek": 504,
        "start": 526.0075,
        "end": 529.9275,
        "text": " probably suggesting that occlusion and interaction from the person to the ladder",
        "tokens": [
            51442,
            1391,
            18094,
            300,
            2678,
            6485,
            293,
            9285,
            490,
            264,
            954,
            281,
            264,
            18325,
            51638,
        ],
        "temperature": 0,
        "avg_logprob": -0.16350348,
        "compression_ratio": 1.7680608,
        "no_speech_prob": 2.116756e-12,
    },
    {
        "id": 107,
        "seek": 504,
        "start": 529.9275,
        "end": 532.0475,
        "text": " might affect the ladder confidence.",
        "tokens": [51638, 1062, 3345, 264, 18325, 6687, 13, 51744],
        "temperature": 0,
        "avg_logprob": -0.16350348,
        "compression_ratio": 1.7680608,
        "no_speech_prob": 2.116756e-12,
    },
    {
        "id": 108,
        "seek": 504,
        "start": 532.5675,
        "end": 534.0075,
        "text": " So let's go to a reflection.",
        "tokens": [51770, 407, 718, 311, 352, 281, 257, 12914, 13, 51842],
        "temperature": 0,
        "avg_logprob": -0.16350348,
        "compression_ratio": 1.7680608,
        "no_speech_prob": 2.116756e-12,
    },
    {
        "id": 109,
        "seek": 3504,
        "start": 534.4675,
        "end": 545.0675,
        "text": " If we want to expand the use case of a model, we can probably generate confidence metadata in the annotation process of the training data, which could help with the confidence distribution of the model.",
        "tokens": [
            50365,
            759,
            321,
            528,
            281,
            5268,
            264,
            764,
            1389,
            295,
            257,
            2316,
            11,
            321,
            393,
            1391,
            8460,
            6687,
            26603,
            294,
            264,
            48654,
            1399,
            295,
            264,
            3097,
            1412,
            11,
            597,
            727,
            854,
            365,
            264,
            6687,
            7316,
            295,
            264,
            2316,
            13,
            50895,
        ],
        "temperature": 0,
        "avg_logprob": -0.112664394,
        "compression_ratio": 1.6145834,
        "no_speech_prob": 7.325433e-12,
    },
    {
        "id": 110,
        "seek": 3504,
        "start": 545.0675,
        "end": 553.0075,
        "text": " We could also have additional labels or classification models that detect safe and unsafe safety practices.",
        "tokens": [
            50895,
            492,
            727,
            611,
            362,
            4497,
            16949,
            420,
            21538,
            5245,
            300,
            5531,
            3273,
            293,
            35948,
            4514,
            7525,
            13,
            51292,
        ],
        "temperature": 0,
        "avg_logprob": -0.112664394,
        "compression_ratio": 1.6145834,
        "no_speech_prob": 7.325433e-12,
    },
    {
        "id": 111,
        "seek": 5358,
        "start": 553.0075,
        "end": 571.02747,
        "text": " Finally, we could consider adding a logic to flag scenarios where ladder detection confidence drops during human interaction, which can indicate ladder usage or potentially unconventional and, as a result, unsafe usage patterns.",
        "tokens": [
            50365,
            6288,
            11,
            321,
            727,
            1949,
            5127,
            257,
            9952,
            281,
            7166,
            15077,
            689,
            18325,
            17784,
            6687,
            11438,
            1830,
            1952,
            9285,
            11,
            597,
            393,
            13330,
            18325,
            14924,
            420,
            7263,
            35847,
            46105,
            293,
            11,
            382,
            257,
            1874,
            11,
            35948,
            14924,
            8294,
            13,
            51266,
        ],
        "temperature": 0,
        "avg_logprob": -0.19779159,
        "compression_ratio": 1.4901961,
        "no_speech_prob": 1.3155721e-11,
    },
    {
        "id": 112,
        "seek": 7160,
        "start": 571.02747,
        "end": 578.8075,
        "text": " So my learnings are basically that, especially in object detection, general accuracy and precision isn't everything.",
        "tokens": [
            50365,
            407,
            452,
            2539,
            82,
            366,
            1936,
            300,
            11,
            2318,
            294,
            2657,
            17784,
            11,
            2674,
            14170,
            293,
            18356,
            1943,
            380,
            1203,
            13,
            50754,
        ],
        "temperature": 0,
        "avg_logprob": -0.16993941,
        "compression_ratio": 1.7689244,
        "no_speech_prob": 5.707605e-12,
    },
    {
        "id": 113,
        "seek": 7160,
        "start": 579.4075,
        "end": 586.3875,
        "text": " Seeing how the relationship between ladder and person confidence score differ on whether the person is climbing the ladder,",
        "tokens": [
            50784,
            19703,
            577,
            264,
            2480,
            1296,
            18325,
            293,
            954,
            6687,
            6175,
            743,
            322,
            1968,
            264,
            954,
            307,
            14780,
            264,
            18325,
            11,
            51133,
        ],
        "temperature": 0,
        "avg_logprob": -0.16993941,
        "compression_ratio": 1.7689244,
        "no_speech_prob": 5.707605e-12,
    },
    {
        "id": 114,
        "seek": 7160,
        "start": 586.7475,
        "end": 594.2875,
        "text": " on the very top of the ladder, obstructing the ladder, can influence the confidence score in a way that is hopefully rather consistent,",
        "tokens": [
            51151,
            322,
            264,
            588,
            1192,
            295,
            264,
            18325,
            11,
            45579,
            278,
            264,
            18325,
            11,
            393,
            6503,
            264,
            6687,
            6175,
            294,
            257,
            636,
            300,
            307,
            4696,
            2831,
            8398,
            11,
            51528,
        ],
        "temperature": 0,
        "avg_logprob": -0.16993941,
        "compression_ratio": 1.7689244,
        "no_speech_prob": 5.707605e-12,
    },
    {
        "id": 115,
        "seek": 7160,
        "start": 594.7875,
        "end": 598.4875,
        "text": " which can lead to stronger use cases than simply detecting objects.",
        "tokens": [
            51553,
            597,
            393,
            1477,
            281,
            7249,
            764,
            3331,
            813,
            2935,
            40237,
            6565,
            13,
            51738,
        ],
        "temperature": 0,
        "avg_logprob": -0.16993941,
        "compression_ratio": 1.7689244,
        "no_speech_prob": 5.707605e-12,
    },
    {
        "id": 116,
        "seek": 9906,
        "start": 598.4875,
        "end": 603.1675,
        "text": " like maybe you can find out the different usage or positioning of the ladder.",
        "tokens": [
            50365,
            411,
            1310,
            291,
            393,
            915,
            484,
            264,
            819,
            14924,
            420,
            26381,
            295,
            264,
            18325,
            13,
            50599,
        ],
        "temperature": 0,
        "avg_logprob": -0.15010537,
        "compression_ratio": 1.8333334,
        "no_speech_prob": 3.3163077e-12,
    },
    {
        "id": 117,
        "seek": 9906,
        "start": 604.2275,
        "end": 610.6675,
        "text": " From a deployment standpoint, when I heard that the requirement was to take down the deployment as fast as I can,",
        "tokens": [
            50652,
            3358,
            257,
            19317,
            15827,
            11,
            562,
            286,
            2198,
            300,
            264,
            11695,
            390,
            281,
            747,
            760,
            264,
            19317,
            382,
            2370,
            382,
            286,
            393,
            11,
            50974,
        ],
        "temperature": 0,
        "avg_logprob": -0.15010537,
        "compression_ratio": 1.8333334,
        "no_speech_prob": 3.3163077e-12,
    },
    {
        "id": 118,
        "seek": 9906,
        "start": 611.0675,
        "end": 616.3275,
        "text": " the first solution I had was to build the undeployment process as part of the function that tested the image.",
        "tokens": [
            50994,
            264,
            700,
            3827,
            286,
            632,
            390,
            281,
            1322,
            264,
            40981,
            2384,
            518,
            1399,
            382,
            644,
            295,
            264,
            2445,
            300,
            8246,
            264,
            3256,
            13,
            51257,
        ],
        "temperature": 0,
        "avg_logprob": -0.15010537,
        "compression_ratio": 1.8333334,
        "no_speech_prob": 3.3163077e-12,
    },
    {
        "id": 119,
        "seek": 9906,
        "start": 616.8075,
        "end": 622.2475,
        "text": " I know that because of this decision, the cloud computing resource was minimized as much as it could be.",
        "tokens": [
            51281,
            286,
            458,
            300,
            570,
            295,
            341,
            3537,
            11,
            264,
            4588,
            15866,
            7684,
            390,
            4464,
            1602,
            382,
            709,
            382,
            309,
            727,
            312,
            13,
            51553,
        ],
        "temperature": 0,
        "avg_logprob": -0.15010537,
        "compression_ratio": 1.8333334,
        "no_speech_prob": 3.3163077e-12,
    },
    {
        "id": 120,
        "seek": 9906,
        "start": 622.7675,
        "end": 627.6275,
        "text": " From a practical standpoint, separating the testing pipeline into deployment predictions",
        "tokens": [
            51579,
            3358,
            257,
            8496,
            15827,
            11,
            29279,
            264,
            4997,
            15517,
            666,
            19317,
            21264,
            51822,
        ],
        "temperature": 0,
        "avg_logprob": -0.15010537,
        "compression_ratio": 1.8333334,
        "no_speech_prob": 3.3163077e-12,
    },
    {
        "id": 121,
        "seek": 12820,
        "start": 627.6275,
        "end": 632.3675,
        "text": " and the drawing of boxes with the test image and draw prediction functions",
        "tokens": [
            50365,
            293,
            264,
            6316,
            295,
            9002,
            365,
            264,
            1500,
            3256,
            293,
            2642,
            17630,
            6828,
            50602,
        ],
        "temperature": 0,
        "avg_logprob": -0.14313792,
        "compression_ratio": 1.6162362,
        "no_speech_prob": 2.167357e-12,
    },
    {
        "id": 122,
        "seek": 12820,
        "start": 632.3675,
        "end": 634.5075,
        "text": " really made it much more easier to debug",
        "tokens": [50602, 534, 1027, 309, 709, 544, 3571, 281, 24083, 50709],
        "temperature": 0,
        "avg_logprob": -0.14313792,
        "compression_ratio": 1.6162362,
        "no_speech_prob": 2.167357e-12,
    },
    {
        "id": 123,
        "seek": 12820,
        "start": 634.5075,
        "end": 639.34753,
        "text": " and even allow for advanced functionality like adjusting the top P and K values.",
        "tokens": [
            50709,
            293,
            754,
            2089,
            337,
            7339,
            14980,
            411,
            23559,
            264,
            1192,
            430,
            293,
            591,
            4190,
            13,
            50951,
        ],
        "temperature": 0,
        "avg_logprob": -0.14313792,
        "compression_ratio": 1.6162362,
        "no_speech_prob": 2.167357e-12,
    },
    {
        "id": 124,
        "seek": 12820,
        "start": 640.0075,
        "end": 644.5475,
        "text": " From the Pascal VOC cleaning and CSV validation,",
        "tokens": [
            50984,
            3358,
            264,
            41723,
            15216,
            34,
            8924,
            293,
            48814,
            24071,
            11,
            51211,
        ],
        "temperature": 0,
        "avg_logprob": -0.14313792,
        "compression_ratio": 1.6162362,
        "no_speech_prob": 2.167357e-12,
    },
    {
        "id": 125,
        "seek": 12820,
        "start": 644.7275,
        "end": 646.3075,
        "text": " I honestly found it quite fun",
        "tokens": [51220, 286, 6095, 1352, 309, 1596, 1019, 51299],
        "temperature": 0,
        "avg_logprob": -0.14313792,
        "compression_ratio": 1.6162362,
        "no_speech_prob": 2.167357e-12,
    },
    {
        "id": 126,
        "seek": 12820,
        "start": 646.3075,
        "end": 649.9475,
        "text": " and the VOC processor was probably one of the most meticulous classes",
        "tokens": [
            51299,
            293,
            264,
            15216,
            34,
            15321,
            390,
            1391,
            472,
            295,
            264,
            881,
            41566,
            6893,
            5359,
            51481,
        ],
        "temperature": 0,
        "avg_logprob": -0.14313792,
        "compression_ratio": 1.6162362,
        "no_speech_prob": 2.167357e-12,
    },
    {
        "id": 127,
        "seek": 12820,
        "start": 649.9475,
        "end": 652.6875,
        "text": " that are built for data wrangling and processing.",
        "tokens": [
            51481,
            300,
            366,
            3094,
            337,
            1412,
            928,
            656,
            1688,
            293,
            9007,
            13,
            51618,
        ],
        "temperature": 0,
        "avg_logprob": -0.14313792,
        "compression_ratio": 1.6162362,
        "no_speech_prob": 2.167357e-12,
    },
    {
        "id": 128,
        "seek": 12820,
        "start": 653.2275,
        "end": 654.7075,
        "text": " I made sure all the requirements were met,",
        "tokens": [51645, 286, 1027, 988, 439, 264, 7728, 645, 1131, 11, 51719],
        "temperature": 0,
        "avg_logprob": -0.14313792,
        "compression_ratio": 1.6162362,
        "no_speech_prob": 2.167357e-12,
    },
    {
        "id": 129,
        "seek": 15528,
        "start": 654.7075,
        "end": 659.1675,
        "text": " have good logging, make sure all the unwanted cases were stored neatly for later analysis.",
        "tokens": [
            50365,
            362,
            665,
            27991,
            11,
            652,
            988,
            439,
            264,
            33745,
            3331,
            645,
            12187,
            36634,
            337,
            1780,
            5215,
            13,
            50588,
        ],
        "temperature": 0,
        "avg_logprob": -0.17226902,
        "compression_ratio": 1.6157205,
        "no_speech_prob": 5.465643e-12,
    },
    {
        "id": 130,
        "seek": 15528,
        "start": 659.5475,
        "end": 664.4275,
        "text": " Plus, I also made sure that the requirements of the VOC processor was met",
        "tokens": [
            50607,
            7721,
            11,
            286,
            611,
            1027,
            988,
            300,
            264,
            7728,
            295,
            264,
            15216,
            34,
            15321,
            390,
            1131,
            50851,
        ],
        "temperature": 0,
        "avg_logprob": -0.17226902,
        "compression_ratio": 1.6157205,
        "no_speech_prob": 5.465643e-12,
    },
    {
        "id": 131,
        "seek": 15528,
        "start": 664.4275,
        "end": 671.0875,
        "text": " by creating a Python script and using PyTest to test against the VOC processor",
        "tokens": [
            50851,
            538,
            4084,
            257,
            15329,
            5755,
            293,
            1228,
            9953,
            51,
            377,
            281,
            1500,
            1970,
            264,
            15216,
            34,
            15321,
            51184,
        ],
        "temperature": 0,
        "avg_logprob": -0.17226902,
        "compression_ratio": 1.6157205,
        "no_speech_prob": 5.465643e-12,
    },
    {
        "id": 132,
        "seek": 15528,
        "start": 671.0875,
        "end": 674.8675,
        "text": " to make sure all the checking functionality was working properly.",
        "tokens": [
            51184,
            281,
            652,
            988,
            439,
            264,
            8568,
            14980,
            390,
            1364,
            6108,
            13,
            51373,
        ],
        "temperature": 0,
        "avg_logprob": -0.17226902,
        "compression_ratio": 1.6157205,
        "no_speech_prob": 5.465643e-12,
    },
    {
        "id": 133,
        "seek": 15528,
        "start": 675.4475,
        "end": 677.8275,
        "text": " Yeah, so this was a pretty fun project.",
        "tokens": [51402, 865, 11, 370, 341, 390, 257, 1238, 1019, 1716, 13, 51521],
        "temperature": 0,
        "avg_logprob": -0.17226902,
        "compression_ratio": 1.6157205,
        "no_speech_prob": 5.465643e-12,
    },
    {
        "id": 134,
        "seek": 15528,
        "start": 678.1275,
        "end": 678.7475,
        "text": " Thanks for watching.",
        "tokens": [51536, 2561, 337, 1976, 13, 51567],
        "temperature": 0,
        "avg_logprob": -0.17226902,
        "compression_ratio": 1.6157205,
        "no_speech_prob": 5.465643e-12,
    },
]

srt_output = json_to_srt(json_data)

# Write to file
with open("output.srt", "w", encoding="utf-8") as f:
    f.write(srt_output)
